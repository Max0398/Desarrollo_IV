// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ProyectoApi.Models
{
    public partial class UnidadesTransporteContext : DbContext
    {
        public UnidadesTransporteContext()
        {
        }

        public UnidadesTransporteContext(DbContextOptions<UnidadesTransporteContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Conductor> Conductores { get; set; }
        public virtual DbSet<DatosUsuario> DatosUsuarios { get; set; }
        public virtual DbSet<Departamento> Departamentos { get; set; }
        public virtual DbSet<Destino> Destinos { get; set; }
        public virtual DbSet<Municipio> Municipios { get; set; }
        public virtual DbSet<Retorno> Retornos { get; set; }
        public virtual DbSet<Salida> Salidas { get; set; }
        public virtual DbSet<TipoUsuario> TipoUsuarios { get; set; }
        public virtual DbSet<TipoViaje> TipoViajes { get; set; }
        public virtual DbSet<Unidad> Unidades { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=MARG;Initial Catalog=UnidadesTransporte;User ID=sa;Password=A34431221a$");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Conductor>(entity =>
            {
                entity.HasKey(e => e.IdConductor)
                    .HasName("PK__Conducto__D6D29603A7120280");

                entity.ToTable("Conductor");

                entity.Property(e => e.Apellidos)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Correo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Licencia)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Nidentificacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NIdentificacion");

                entity.Property(e => e.Nombres)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ntelefono)
                    .IsRequired()
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("NTelefono");

                entity.HasOne(d => d.IdUsuarioRegistroNavigation)
                    .WithMany(p => p.Conductors)
                    .HasForeignKey(d => d.IdUsuarioRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Conductor__IdUsu__2F10007B");
            });

            modelBuilder.Entity<DatosUsuario>(entity =>
            {
                entity.HasKey(e => e.IdDatos)
                    .HasName("PK__DatosUsu__A4BC7BC5F408F224");

                entity.ToTable("DatosUsuario");

                entity.Property(e => e.Apellidos)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion)
                    .IsRequired()
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Nidentificacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NIdentificacion");

                entity.Property(e => e.Nombres)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdUsuarioNavigation)
                    .WithMany(p => p.DatosUsuarios)
                    .HasForeignKey(d => d.IdUsuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DatosUsua__Fecha__2B3F6F97");
            });

            modelBuilder.Entity<Departamento>(entity =>
            {
                entity.HasKey(e => e.IdDepartamento)
                    .HasName("PK__Departam__787A433D0BD774CE");

                entity.ToTable("Departamento");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.IdUsuarioRegistroNavigation)
                    .WithMany(p => p.Departamentos)
                    .HasForeignKey(d => d.IdUsuarioRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Departame__Fecha__36B12243");
            });

            modelBuilder.Entity<Destino>(entity =>
            {
                entity.HasKey(e => e.IdDestino)
                    .HasName("PK__Destino__55FFB3D557302A08");

                entity.ToTable("Destino");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.IdConductorNavigation)
                    .WithMany(p => p.Destinos)
                    .HasForeignKey(d => d.IdConductor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Destino__IdCondu__44FF419A");

                entity.HasOne(d => d.IdDepartamentoNavigation)
                    .WithMany(p => p.Destinos)
                    .HasForeignKey(d => d.IdDepartamento)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Destino__IdDepar__4222D4EF");

                entity.HasOne(d => d.IdMunicipioNavigation)
                    .WithMany(p => p.Destinos)
                    .HasForeignKey(d => d.IdMunicipio)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Destino__IdMunic__4316F928");

                entity.HasOne(d => d.IdTipoViajeNavigation)
                    .WithMany(p => p.Destinos)
                    .HasForeignKey(d => d.IdTipoViaje)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Destino__IdTipoV__45F365D3");

                entity.HasOne(d => d.IdUnidadNavigation)
                    .WithMany(p => p.Destinos)
                    .HasForeignKey(d => d.IdUnidad)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Destino__IdUnida__440B1D61");

                entity.HasOne(d => d.IdUsuarioRegistroNavigation)
                    .WithMany(p => p.Destinos)
                    .HasForeignKey(d => d.IdUsuarioRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Destino__IdUsuar__46E78A0C");
            });

            modelBuilder.Entity<Municipio>(entity =>
            {
                entity.HasKey(e => e.IdMunicipio)
                    .HasName("PK__Municipi__61005978B0EA6F85");

                entity.ToTable("Municipio");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.IdUsuarioRegistroNavigation)
                    .WithMany(p => p.Municipios)
                    .HasForeignKey(d => d.IdUsuarioRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Municipio__Fecha__3A81B327");
            });

            modelBuilder.Entity<Retorno>(entity =>
            {
                entity.HasKey(e => e.IdRetorno)
                    .HasName("PK__Retorno__F7C1B09CE8B0C5E8");

                entity.ToTable("Retorno");

                entity.Property(e => e.Fhretorno)
                    .HasColumnType("datetime")
                    .HasColumnName("FHRetorno");

                entity.HasOne(d => d.IdDestinoNavigation)
                    .WithMany(p => p.Retornos)
                    .HasForeignKey(d => d.IdDestino)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Retorno__IdDesti__4E88ABD4");

                entity.HasOne(d => d.IdUsuarioRegistroNavigation)
                    .WithMany(p => p.Retornos)
                    .HasForeignKey(d => d.IdUsuarioRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Retorno__IdUsuar__4D94879B");
            });

            modelBuilder.Entity<Salida>(entity =>
            {
                entity.HasKey(e => e.IdSalida)
                    .HasName("PK__Salida__5D69EC7236CF97F1");

                entity.Property(e => e.Fhsalida)
                    .HasColumnType("datetime")
                    .HasColumnName("FHSalida");

                entity.HasOne(d => d.IdDestinoNavigation)
                    .WithMany(p => p.Salida)
                    .HasForeignKey(d => d.IdDestino)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Salida__IdDestin__49C3F6B7");

                entity.HasOne(d => d.IdUsuarioRegistroNavigation)
                    .WithMany(p => p.Salida)
                    .HasForeignKey(d => d.IdUsuarioRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Salida__IdUsuari__4AB81AF0");
            });

            modelBuilder.Entity<TipoUsuario>(entity =>
            {
                entity.HasKey(e => e.IdTipoUsuario)
                    .HasName("PK__TipoUsua__CA04062B347D7B7D");

                entity.ToTable("TipoUsuario");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TipoViaje>(entity =>
            {
                entity.HasKey(e => e.IdTipoViaje)
                    .HasName("PK__TipoViaj__36DFC2032DFF9CEB");

                entity.ToTable("TipoViaje");

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.IdUsuarioRegistroNavigation)
                    .WithMany(p => p.TipoViajes)
                    .HasForeignKey(d => d.IdUsuarioRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TipoViaje__IdUsu__3E52440B");
            });

            modelBuilder.Entity<Unidad>(entity =>
            {
                entity.HasKey(e => e.IdUnidad)
                    .HasName("PK__Unidad__437725E6A82884B3");

                entity.ToTable("Unidad");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Marca)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Modelo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nplaca)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NPlaca");

                entity.HasOne(d => d.IdUsuarioRegistroNavigation)
                    .WithMany(p => p.Unidads)
                    .HasForeignKey(d => d.IdUsuarioRegistro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Unidad__FechaReg__32E0915F");
            });

            modelBuilder.Entity<Usuario>(entity =>
            {
                entity.HasKey(e => e.IdUsuario)
                    .HasName("PK__Usuario__5B65BF9763D1E634");

                entity.ToTable("Usuario");

                entity.Property(e => e.Contrasenia)
                    .IsRequired()
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.Correo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdTipoUsuarioNavigation)
                    .WithMany(p => p.Usuarios)
                    .HasForeignKey(d => d.IdTipoUsuario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Usuario__IdTipoU__276EDEB3");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}